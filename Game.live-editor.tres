[gd_resource type="Resource" load_steps=7 format=2]

[ext_resource path="res://addons/exporter-for-live-editor/collections/ScriptHandler.gd" type="Script" id=1]
[ext_resource path="res://addons/exporter-for-live-editor/collections/SceneFiles.gd" type="Script" id=2]
[ext_resource path="res://addons/exporter-for-live-editor/collections/ScriptSlice.gd" type="Script" id=3]
[ext_resource path="res://common/Level.tscn" type="PackedScene" id=4]

[sub_resource type="Resource" id=1]
script = ExtResource( 3 )
leading_spaces = 1
keyword = "EXPORT"
closing = false
name = "jump"
is_full_file = false
start = 16
end = 38
lines_before = [ "# Player", "extends KinematicBody2D", "", "export var jump_speed := 200", "export var jump_max_height := 100.0", "export var gravity := 4000", "", "var is_walking := false", "", "onready var animated_sprite := $AnimatedSprite as AnimatedSprite", "", "var _velocity_y = 0.0", "var _jump_starting_point := 0.0", "", "", "func _physics_process(delta: float) -> void:" ]
lines_after = [ "" ]
lines_editable = [ "if not is_instance_valid(self):", "	return", "if Input.is_action_just_pressed(\"jump\") and is_on_floor():", "	_jump_starting_point = position.y", "	_velocity_y -= jump_speed", "	animated_sprite.play(\"jump\")", "elif Input.is_action_pressed(\"jump\"):", "	var jump_height := _jump_starting_point - position.y", "	var is_going_up: bool = _velocity_y < 0", "	var is_under_apex: bool = jump_height < jump_max_height", "	if is_going_up and is_under_apex:", "		_velocity_y -= jump_speed", "elif is_on_floor() and is_walking:", "	animated_sprite.play(\"walk\")", "else:", "	animated_sprite.stop()", "", "_velocity_y += gravity * delta", "", "var velocity := Vector2(0, _velocity_y)", "_velocity_y = move_and_slide(velocity, Vector2.UP).y" ]

[sub_resource type="Resource" id=2]
script = ExtResource( 1 )
nodes_paths = [ NodePath("Player") ]
file_path = "res://assets/Player.gd"
name = "Player"
original_script = "# Player
extends KinematicBody2D

export var jump_speed := 200
export var jump_max_height := 100.0
export var gravity := 4000

var is_walking := false

onready var animated_sprite := $AnimatedSprite as AnimatedSprite

var _velocity_y = 0.0
var _jump_starting_point := 0.0


func _physics_process(delta: float) -> void:
	# EXPORT jump
	if not is_instance_valid(self):
		return
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		_jump_starting_point = position.y
		_velocity_y -= jump_speed
		animated_sprite.play(\"jump\")
	elif Input.is_action_pressed(\"jump\"):
		var jump_height := _jump_starting_point - position.y
		var is_going_up: bool = _velocity_y < 0
		var is_under_apex: bool = jump_height < jump_max_height
		if is_going_up and is_under_apex:
			_velocity_y -= jump_speed
	elif is_on_floor() and is_walking:
		animated_sprite.play(\"walk\")
	else:
		animated_sprite.stop()
	
	_velocity_y += gravity * delta

	var velocity := Vector2(0, _velocity_y)
	_velocity_y = move_and_slide(velocity, Vector2.UP).y
	# /EXPORT jump
"
slices = {
"jump": SubResource( 1 )
}

[resource]
script = ExtResource( 2 )
files = {
"res://assets/Player.gd": SubResource( 2 )
}
scene = ExtResource( 4 )
scene_viewport_size = Vector2( 1024, 600 )
